# import pypred

# # Универсальное выражение для поиска упоминаний "Черной пятницы" и соответствующих слов
# # Используем логические операторы и регулярные выражения для более точного поиска
# # Пример: "черная пятница", "чорна пятниця", "черн пятниця", "чорн пятниця", "черн. пятн.", "чорн. пятн."
# # predicate_expression = создаём список сообщений, которые могут содержать "черную пятницу" и её вариации c выражением предиката
# predicate_expression = """
#     (text contains "черн" or text contains "чорн") and
#     (text contains "пятниц" or text contains "пятнец" or text contains "пятницо" or text contains "ецы")
# """

# # Создание предиката на основе выражения
# # Используем pypred для создания предиката на основе выражения
# # pypred.Predicate - это класс(шаблон или чертёж(рецепт торта*)), который позволяет создавать предикаты на основе выражений
# # predicate - это объект, который будет использоваться для проверки соответствия сообщения предикату
# predicate = pypred.Predicate(predicate_expression)

# # Примеры сообщений
# messages = [
#     "Добрый день! А до какого числа черная пятница будет действовать?",
#     "Эта ваша чорная пятница мошейничество",
#     "Где мой заказ?",
#     "Черной пятнецы больше нет?"
# ]

# # Проверка каждого сообщения
# for msg in messages:
#     # Применяем предикат к каждому сообщению, приводя текст к нижнему регистру
#     # Используем метод evaluate для проверки соответствия сообщения предикату
#     # text - это ключ, который мы используем в предикате для поиска
#     if predicate.evaluate({"text": msg.lower()}):  # Приводим текст к нижнему регистру
#         print(f"✅ Бот реагирует: {msg}")
#     else:
#         print(f"❌ Бот НЕ отвечает: {msg}")

from datetime import datetime

order_date = "2025-04-13T12:00:00"
delivery_date = "2025-04-13T15:30:00"

print((datetime.fromisoformat("2025-04-13T15:30:00") - datetime.fromisoformat("2025-04-13T12:00:00")).total_seconds() // 60)
